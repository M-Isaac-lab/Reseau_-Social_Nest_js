// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int     @default(autoincrement()) @id
  username String @db.VarChar(55)
  email String  @unique @db.VarChar(255)
  password String @db.VarChar(255)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  posts Post[] @relation("user_posts")
  comments Comment[] @relation("user_comment")
}

model Post {
  postId Int @default(autoincrement()) @id
  title String @db.VarChar(255)
  body String
  userId Int
  user User @relation("user_posts", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
  comments Comment[] @relation("pots_comment")
}

model Comment {
  commentId Int @id @default(autoincrement())
  content String @db.VarChar(255)
  postId Int
  userId Int
  post Post @relation("pots_comment", fields: [postId], references: [postId], onUpdate: Cascade, onDelete: Cascade)
  user User @relation("user_comment", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)

}